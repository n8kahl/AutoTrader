services:
  api:
    build: .
    container_name: autotrader_api
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      worker:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./state:/srv/state

  worker:
    build: .
    container_name: autotrader_worker
    command: python -m app.worker
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./state:/srv/state

  streamer:
    build: .
    container_name: autotrader_streamer
    command: python scripts/polygon_ws.py
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./state:/srv/state

  db:
    image: timescale/timescaledb:2.14.2-pg15
    container_name: autotrader_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-autotrader}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-autotrader}
      POSTGRES_DB: ${DB_NAME:-autotrader}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-autotrader} -d ${DB_NAME:-autotrader}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
